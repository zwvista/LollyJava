/**
 * This class is generated by jOOQ
 */
package com.zwstudio.lolly.jooq.tables;


import com.zwstudio.lolly.jooq.DefaultSchema;
import com.zwstudio.lolly.jooq.Keys;
import com.zwstudio.lolly.jooq.tables.records.SitesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sites extends TableImpl<SitesRecord> {

    private static final long serialVersionUID = -1305872762;

    /**
     * The reference instance of <code>SITES</code>
     */
    public static final Sites SITES = new Sites();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SitesRecord> getRecordType() {
        return SitesRecord.class;
    }

    /**
     * The column <code>SITES.ID</code>.
     */
    public final TableField<SitesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>SITES.NAME</code>.
     */
    public final TableField<SitesRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>SITES.TRANSFORM_WIN</code>.
     */
    public final TableField<SitesRecord, String> TRANSFORM_WIN = createField("TRANSFORM_WIN", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>SITES.TRANSFORM_MAC</code>.
     */
    public final TableField<SitesRecord, String> TRANSFORM_MAC = createField("TRANSFORM_MAC", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>SITES.WAIT</code>.
     */
    public final TableField<SitesRecord, Integer> WAIT = createField("WAIT", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("50", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>SITES</code> table reference
     */
    public Sites() {
        this("SITES", null);
    }

    /**
     * Create an aliased <code>SITES</code> table reference
     */
    public Sites(String alias) {
        this(alias, SITES);
    }

    private Sites(String alias, Table<SitesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sites(String alias, Table<SitesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SitesRecord> getPrimaryKey() {
        return Keys.PK_SITES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SitesRecord>> getKeys() {
        return Arrays.<UniqueKey<SitesRecord>>asList(Keys.PK_SITES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Sites as(String alias) {
        return new Sites(alias, this);
    }

    /**
     * Rename this table
     */
    public Sites rename(String name) {
        return new Sites(name, null);
    }
}
