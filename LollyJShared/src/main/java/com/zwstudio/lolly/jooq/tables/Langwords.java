/**
 * This class is generated by jOOQ
 */
package com.zwstudio.lolly.jooq.tables;


import com.zwstudio.lolly.jooq.DefaultSchema;
import com.zwstudio.lolly.jooq.Keys;
import com.zwstudio.lolly.jooq.tables.records.LangwordsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Langwords extends TableImpl<LangwordsRecord> {

    private static final long serialVersionUID = -243003117;

    /**
     * The reference instance of <code>LANGWORDS</code>
     */
    public static final Langwords LANGWORDS = new Langwords();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LangwordsRecord> getRecordType() {
        return LangwordsRecord.class;
    }

    /**
     * The column <code>LANGWORDS.ID</code>.
     */
    public final TableField<LangwordsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("null", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>LANGWORDS.LANGID</code>.
     */
    public final TableField<LangwordsRecord, Integer> LANGID = createField("LANGID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LANGWORDS.WORD</code>.
     */
    public final TableField<LangwordsRecord, String> WORD = createField("WORD", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>LANGWORDS.LEVEL</code>.
     */
    public final TableField<LangwordsRecord, Integer> LEVEL = createField("LEVEL", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>LANGWORDS</code> table reference
     */
    public Langwords() {
        this("LANGWORDS", null);
    }

    /**
     * Create an aliased <code>LANGWORDS</code> table reference
     */
    public Langwords(String alias) {
        this(alias, LANGWORDS);
    }

    private Langwords(String alias, Table<LangwordsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Langwords(String alias, Table<LangwordsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LangwordsRecord> getPrimaryKey() {
        return Keys.PK_LANGWORDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LangwordsRecord>> getKeys() {
        return Arrays.<UniqueKey<LangwordsRecord>>asList(Keys.PK_LANGWORDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LangwordsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LangwordsRecord, ?>>asList(Keys.FK_LANGWORDS_LANGUAGES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Langwords as(String alias) {
        return new Langwords(alias, this);
    }

    /**
     * Rename this table
     */
    public Langwords rename(String name) {
        return new Langwords(name, null);
    }
}
