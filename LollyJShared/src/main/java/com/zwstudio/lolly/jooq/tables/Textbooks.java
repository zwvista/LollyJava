/**
 * This class is generated by jOOQ
 */
package com.zwstudio.lolly.jooq.tables;


import com.zwstudio.lolly.jooq.DefaultSchema;
import com.zwstudio.lolly.jooq.Keys;
import com.zwstudio.lolly.jooq.tables.records.TextbooksRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Textbooks extends TableImpl<TextbooksRecord> {

    private static final long serialVersionUID = -819569452;

    /**
     * The reference instance of <code>TEXTBOOKS</code>
     */
    public static final Textbooks TEXTBOOKS = new Textbooks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TextbooksRecord> getRecordType() {
        return TextbooksRecord.class;
    }

    /**
     * The column <code>TEXTBOOKS.ID</code>.
     */
    public final TableField<TextbooksRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TEXTBOOKS.LANGID</code>.
     */
    public final TableField<TextbooksRecord, Integer> LANGID = createField("LANGID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TEXTBOOKS.NAME</code>.
     */
    public final TableField<TextbooksRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>TEXTBOOKS.UNITS</code>.
     */
    public final TableField<TextbooksRecord, Integer> UNITS = createField("UNITS", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("100", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>TEXTBOOKS.PARTS</code>.
     */
    public final TableField<TextbooksRecord, String> PARTS = createField("PARTS", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaultValue(org.jooq.impl.DSL.field("'Text'", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>TEXTBOOKS</code> table reference
     */
    public Textbooks() {
        this("TEXTBOOKS", null);
    }

    /**
     * Create an aliased <code>TEXTBOOKS</code> table reference
     */
    public Textbooks(String alias) {
        this(alias, TEXTBOOKS);
    }

    private Textbooks(String alias, Table<TextbooksRecord> aliased) {
        this(alias, aliased, null);
    }

    private Textbooks(String alias, Table<TextbooksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TextbooksRecord> getPrimaryKey() {
        return Keys.PK_TEXTBOOKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TextbooksRecord>> getKeys() {
        return Arrays.<UniqueKey<TextbooksRecord>>asList(Keys.PK_TEXTBOOKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TextbooksRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TextbooksRecord, ?>>asList(Keys.FK_TEXTBOOKS_LANGUAGES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Textbooks as(String alias) {
        return new Textbooks(alias, this);
    }

    /**
     * Rename this table
     */
    public Textbooks rename(String name) {
        return new Textbooks(name, null);
    }
}
