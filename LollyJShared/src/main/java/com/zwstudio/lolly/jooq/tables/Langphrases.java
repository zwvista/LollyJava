/**
 * This class is generated by jOOQ
 */
package com.zwstudio.lolly.jooq.tables;


import com.zwstudio.lolly.jooq.DefaultSchema;
import com.zwstudio.lolly.jooq.Keys;
import com.zwstudio.lolly.jooq.tables.records.LangphrasesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Langphrases extends TableImpl<LangphrasesRecord> {

    private static final long serialVersionUID = -1924716869;

    /**
     * The reference instance of <code>LANGPHRASES</code>
     */
    public static final Langphrases LANGPHRASES = new Langphrases();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LangphrasesRecord> getRecordType() {
        return LangphrasesRecord.class;
    }

    /**
     * The column <code>LANGPHRASES.ID</code>.
     */
    public final TableField<LangphrasesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LANGPHRASES.LANGID</code>.
     */
    public final TableField<LangphrasesRecord, Integer> LANGID = createField("LANGID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LANGPHRASES.PHRASE</code>.
     */
    public final TableField<LangphrasesRecord, String> PHRASE = createField("PHRASE", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>LANGPHRASES.TRANSLATION</code>.
     */
    public final TableField<LangphrasesRecord, String> TRANSLATION = createField("TRANSLATION", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>LANGPHRASES</code> table reference
     */
    public Langphrases() {
        this("LANGPHRASES", null);
    }

    /**
     * Create an aliased <code>LANGPHRASES</code> table reference
     */
    public Langphrases(String alias) {
        this(alias, LANGPHRASES);
    }

    private Langphrases(String alias, Table<LangphrasesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Langphrases(String alias, Table<LangphrasesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LangphrasesRecord> getPrimaryKey() {
        return Keys.PK_LANGPHRASES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LangphrasesRecord>> getKeys() {
        return Arrays.<UniqueKey<LangphrasesRecord>>asList(Keys.PK_LANGPHRASES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LangphrasesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LangphrasesRecord, ?>>asList(Keys.FK_LANGPHRASES_LANGUAGES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Langphrases as(String alias) {
        return new Langphrases(alias, this);
    }

    /**
     * Rename this table
     */
    public Langphrases rename(String name) {
        return new Langphrases(name, null);
    }
}
