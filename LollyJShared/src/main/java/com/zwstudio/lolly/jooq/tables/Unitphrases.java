/**
 * This class is generated by jOOQ
 */
package com.zwstudio.lolly.jooq.tables;


import com.zwstudio.lolly.jooq.DefaultSchema;
import com.zwstudio.lolly.jooq.Keys;
import com.zwstudio.lolly.jooq.tables.records.UnitphrasesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Unitphrases extends TableImpl<UnitphrasesRecord> {

    private static final long serialVersionUID = -1915543031;

    /**
     * The reference instance of <code>UNITPHRASES</code>
     */
    public static final Unitphrases UNITPHRASES = new Unitphrases();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UnitphrasesRecord> getRecordType() {
        return UnitphrasesRecord.class;
    }

    /**
     * The column <code>UNITPHRASES.ID</code>.
     */
    public final TableField<UnitphrasesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>UNITPHRASES.TEXTBOOKID</code>.
     */
    public final TableField<UnitphrasesRecord, Integer> TEXTBOOKID = createField("TEXTBOOKID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>UNITPHRASES.UNIT</code>.
     */
    public final TableField<UnitphrasesRecord, Integer> UNIT = createField("UNIT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>UNITPHRASES.PART</code>.
     */
    public final TableField<UnitphrasesRecord, Integer> PART = createField("PART", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>UNITPHRASES.SEQNUM</code>.
     */
    public final TableField<UnitphrasesRecord, Integer> SEQNUM = createField("SEQNUM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>UNITPHRASES.LANGPHRASEID</code>.
     */
    public final TableField<UnitphrasesRecord, Integer> LANGPHRASEID = createField("LANGPHRASEID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>UNITPHRASES</code> table reference
     */
    public Unitphrases() {
        this("UNITPHRASES", null);
    }

    /**
     * Create an aliased <code>UNITPHRASES</code> table reference
     */
    public Unitphrases(String alias) {
        this(alias, UNITPHRASES);
    }

    private Unitphrases(String alias, Table<UnitphrasesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Unitphrases(String alias, Table<UnitphrasesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UnitphrasesRecord> getPrimaryKey() {
        return Keys.PK_UNITPHRASES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UnitphrasesRecord>> getKeys() {
        return Arrays.<UniqueKey<UnitphrasesRecord>>asList(Keys.PK_UNITPHRASES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UnitphrasesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UnitphrasesRecord, ?>>asList(Keys.FK_UNITPHRASES_TEXTBOOKS_1, Keys.FK_UNITPHRASES_LANGPHRASES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Unitphrases as(String alias) {
        return new Unitphrases(alias, this);
    }

    /**
     * Rename this table
     */
    public Unitphrases rename(String name) {
        return new Unitphrases(name, null);
    }
}
